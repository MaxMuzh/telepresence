name: "Install dependencies"
description: "Install dependencies required by the runner"
runs:
  using: composite
  steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '1.19'
    - uses: azure/setup-kubectl@v3
      with:
        version: 'v1.25.3'
      id: kubectl
    - if: runner.os == 'Linux'
      name: install Linux dependencies
      shell: bash
      run: |
        set -ex
        
        sudo rm -f /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y sshfs socat
        sudo sh -c 'echo user_allow_other >> /etc/fuse.conf'
        
        if [[ ${RUNNER_ARCH} == "ARM64" ]]; then
          sudo apt-get install -y ca-certificates curl gnupg lsb-release

          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          
          #Set-up docker repository
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
          sudo apt-get install -y
        
          # Add current user to the docker group
          sudo groupadd docker
          sudo usermod -aG docker $USER
        fi
    - if: runner.os == 'macOS'
      name: install macOS dependencies
      shell: bash
      run: |
        brew update
        brew install --cask macfuse
        brew install gromgit/fuse/sshfs-mac
        brew link --overwrite sshfs-mac
        
        if [[ ${RUNNER_ARCH} == "ARM64" ]]; then
          brew install jq
        fi
    - if: runner.os == 'Windows'
      name: install Windows dependencies
      shell: powershell
      run: |
        choco install make
        
        # Download sshfs
        curl -o winfsp.msi https://github.com/billziss-gh/winfsp/releases/download/v1.11/winfsp-1.11.22176.msi
        curl -o sshfs-win.msi https://github.com/billziss-gh/sshfs-win/releases/download/v3.7.21011/sshfs-win-3.7.21011-x64.msi

        Start-Process msiexec -Wait -verb runAs -Args "/i winfsp.msi /passive /qn /L*V winfsp-install.log"
        Start-Process msiexec -Wait -verb runAs -Args "/i sshfs-win.msi /passive /qn /L*V sshfs-win-install.log"
        
        [Environment]::SetEnvironmentVariable("Path", "C:\\;C:\\Program Files\\SSHFS-Win\\bin;$ENV:Path", "Machine")
